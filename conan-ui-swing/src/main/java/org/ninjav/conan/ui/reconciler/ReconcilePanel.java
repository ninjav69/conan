/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ninjav.conan.ui.reconciler;

import org.ninjav.conan.transaction.PresentableTransaction;

import java.util.List;
import javax.swing.JButton;
import javax.swing.JTextArea;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ninjav
 */
public class ReconcilePanel extends javax.swing.JPanel {

    /**
     * Creates new form ReconcilePanel
     */
    public ReconcilePanel() {
        initComponents();
        creditSelector.updateSearchForLabel("Credit reference:");
        debitSelector.updateSearchForLabel("Debit reference:");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectTransactionSplitter = new javax.swing.JSplitPane();
        creditSelector = new TransactionSelectorPanel();
        debitSelector = new TransactionSelectorPanel();
        controlPanel = new ControlPanel();

        selectTransactionSplitter.setDividerLocation(250);
        selectTransactionSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        selectTransactionSplitter.setTopComponent(creditSelector);
        selectTransactionSplitter.setRightComponent(debitSelector);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(selectTransactionSplitter, javax.swing.GroupLayout.PREFERRED_SIZE, 941, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selectTransactionSplitter, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ControlPanel controlPanel;
    private TransactionSelectorPanel creditSelector;
    private TransactionSelectorPanel debitSelector;
    private javax.swing.JSplitPane selectTransactionSplitter;
    // End of variables declaration//GEN-END:variables


    public void reset() {
        controlPanel.reset();
        creditSelector.reset();
        debitSelector.reset();
    }
    
    public JButton getCreditSearchButton() {
        return creditSelector.getSearchButton();
    }
    
    public JButton getDebitSearchButton() {
        return debitSelector.getSearchButton();
    }
    
    public String getCreditSearchForText() {
        return creditSelector.getSearchForText();
    }
    
    public String getDebitSearchForText() {
        return debitSelector.getSearchForText();
    }
    
    public ListSelectionModel getCreditSelectionModel() {
        return creditSelector.getSelectionModel();
    }
    
    public ListSelectionModel getDebitSelectionModel() {
        return debitSelector.getSelectionModel();
    }
    
    public void clearCreditTransactions() {
        creditSelector.clearTransactions();
    }
    
    public void clearDebitTransactions() {
        debitSelector.clearTransactions();
    }
    
    public void addCreditTransactions(List<PresentableTransaction> transactions) {
        transactions.stream().forEach((t) -> {
            creditSelector.addTransaction(t);
        });
    }
    
    public void addDebitTransactions(List<PresentableTransaction> transactions) {
        transactions.stream().forEach((t) -> {
            debitSelector.addTransaction(t);
        });
    }

    public DefaultTableModel getCreditsTransactionModel() {
        return creditSelector.getTableModel();
    }

    public DefaultTableModel getDebitsTransactionModel() {
        return debitSelector.getTableModel();
    }

    public void updateCreditsLabel(String amount) {
        controlPanel.updateCreditsLabel(amount);
    }

    public void updateDebitsLabel(String amount) {
        controlPanel.updateDebitsLabel(amount);
    }

    public void updateBalanceLabel(String amount) {
        controlPanel.updateBalanceLabel(amount);
    }

    public void updateChronologicalLabel(String text) {
        controlPanel.updateChronologicalLabel(text);
    }

    public JButton getReconcileButton() {
        return controlPanel.getReconcileButton();
    }

    public JTextArea getCreditSearchField() {
        return creditSelector.getSearchForField();
    }

    public JTextArea getDebitSearchField() {
        return debitSelector.getSearchForField();
    }

    public JTextArea getNotesField() {
        return controlPanel.getNotesField();
    }

    public int[] getSelectedCreditTransactionRows() {
        return creditSelector.getSelectedRows();
    }

    public int[] getSelectedDebitTransactionRows() {
        return debitSelector.getSelectedRows();
    }

}
